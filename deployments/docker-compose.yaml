version: "3.8"

services:
  redis:
    image: redis
    restart: unless-stopped
    container_name: hackathon-redis
    ports:
      - ${REDIS_PORT}:6379
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${REDIS_PORT}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:11.1-alpine
    restart: unless-stopped
    container_name: hackathon-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${POSTGRES_PORT}"
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    restart: on-failure
    container_name: hackathon-app
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - ${API_PORT}:3000
    depends_on:
      - database
      - redis

  # poller:
  #   build:
  #     context: ..
  #     dockerfile: deployments/Dockerfile-poller
  #   restart: on-failure
  #   container_name: hackathon-poller
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #   ports:
  #     - ${POLLER_PORT}:8000
  #   depends_on:
  #     - redis
